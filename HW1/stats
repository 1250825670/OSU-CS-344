#!/bin/bash

# Flag to determine if temporary file for input data should be
# deleted. Default to 1 so delete will not execute if the script
# encounters a SIGINT early.
delete_in_data_flag=1

function delete_in_data() {
    if [ $delete_in_data_flag -eq 0 ];
    then
        rm -f $indata
    fi
}

function echo_usage() {
    echo "Usage: stats {-rows|-cols} [input]" 1>&2
}

function echo_badfile() {
    echo "./stats: cannot read $1" 1>&2
}

function echo_nodata() {
    echo "No data in input" 1>&2
}

# Checking to see if inputs are valid
# Echoes usage and exits if invalid

if [ $# -ne 1 ] && [ $# -ne 2 ];
then
    echo_usage
    exit 1
fi

if [[ $1 != -r* ]] && [[ $1 != -c* ]];
then
    echo_usage
    exit 1
fi

if [ $# -gt 2 ];
then
    echo_usage
    exit 1
fi

if [ $# -eq 2 ] && [ ! -f "$2" ];
then
    echo_badfile $2
    exit 1
fi

# Check to see if reading from file or stdin
indata="inputdata$$"
if [ "$#" = "1" ]
then
    # Create temporary file with contents of stdin
    cat > "$indata"

    # Need to remember to delete temporary file
    delete_in_data_flag=0
elif [ "$#" = "2" ]
then
    indata=$2
fi

tempfile="tempfile$$"
trap "delete_in_data; rm -f $tempfile; echo 'CTRL+C received, exiting'; exit 1" INT HUP TERM

# -row option
if [[ $1 == -r* ]];
then
    # Check to see if there is any data in input
    read firstrow < $indata
    if [[ $firstrow == "" ]]
    then
        echo_nodata
        exit 0
    fi

    echo Average Median
    while read curRow
    do
        # Initialize accumulators to 0
        sum=0
        count=0

        # Clear the contents of temporary file before next row
        > $tempfile

        # Calculate sum of all numbers in current row
        for num in $curRow
        do
            sum=`expr $sum + $num`
            count=`expr $count + 1`
            echo $num >> $tempfile
        done
        sort -g $tempfile -o $tempfile

        # Prints the average
        printf "%b\t" "$(( ($sum + ($count / 2)) / $count ))"

        # Prints the median
        head -$(( ($count + 2) / 2 )) $tempfile | tail -1

        # Checks if data should be read from file or stdin
        # https://stackoverflow.com/questions/6980090/how-to-read-from-file-or-stdin-in-bash
    done < $indata
fi

# -col version
if [[ $1 == -c* ]];
then
    # Check to see if there is any data in input
    read firstrow < $indata
    if [[ $firstrow == "" ]]
    then
        echo_nodata
        exit 0
    fi

    average=""
    median=""
    cur_col_ind=1

    # Runs for every column in data
    for cols in $firstrow
    do
        # Obtains the data in the current column
        cur_col=`cut -f$cur_col_ind $indata`

        # Initializes accumulators
        sum=0
        count=0
        > $tempfile

        # Calculate total of all numbers in current column
        for num in $cur_col
        do
            sum=`expr $sum + $num`
            count=`expr $count + 1`
            echo $num >> $tempfile
        done
        sort -g $tempfile -o $tempfile

        # Output average
        if [ $cur_col_ind -eq 1 ];
        then
            # Don't include a tab if this is the first element
            average="$(( ($sum + ($count / 2)) / $count ))"
            median="`head -$(( ($count + 2) / 2 )) $tempfile | tail -1`"
        else
            average="$average"$'\t'"$(( ($sum + ($count / 2)) / $count ))"
            median="$median"$'\t'"`head -$(( ($count + 2) / 2 )) $tempfile | tail -1`"
        fi
        cur_col_ind=`expr $cur_col_ind + 1`
    done
    printf "Averages:\n"
    printf "%s\n" "$average"
    printf "Medians:\n"
    printf "%s\n" "$median"
fi

rm -f $tempfile
delete_in_data
