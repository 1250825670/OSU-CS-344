#!/bin/bash

function echo_usage() {
    echo "Usage: stats {-rows|-cols} [input]" 1>&2
}

function echo_badfile() {
    echo "./stats: cannot read $1" 1>&2
}

# Checking to see if inputs are valid
# Echoes usage and exits if invalid

if [ $# -ne 1 ] && [ $# -ne 2 ];
then
    echo_usage
    exit 1
fi

if [[ $1 != -r* ]] && [[ $1 != -c* ]];
then
    echo_usage
    exit 1
fi

if [ $# -gt 2 ];
then
    echo_usage
    exit 1
fi

if [ $# -eq 2 ] && [ ! -f "$2" ];
then
    echo_badfile $2
    exit 1
fi

tempfile="tempfile$$"
# echo $tempfile

# -row option
if [[ $1 == -r* ]];
then
    echo Average Median
    while read curRow
    do
        # Initialize accumulators to 0
        sum=0
        count=0

        # Clear the contents of temporary file before next row
        > $tempfile

        for num in $curRow
        do
            sum=`expr $sum + $num`
            count=`expr $count + 1`
            echo $num >> $tempfile
        done
        sort -g $tempfile -o $tempfile

        # Prints the average
        # echo "$(( ($sum + ($count / 2)) / $count ))"
        printf "%b\t" "$(( ($sum + ($count / 2)) / $count ))"

        # Prints the median
        tail -$(( ($count / 2) + 1 )) $tempfile | head -1

        # Checks if data should be read from file or stdin
        # https://stackoverflow.com/questions/6980090/how-to-read-from-file-or-stdin-in-bash
    done < "${2:-/dev/stdin}"
fi

rm -f $tempfile
